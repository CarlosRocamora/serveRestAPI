{
	"info": {
		"_postman_id": "ce31559c-2300-477b-8a93-018ccebb2bc2",
		"name": "ServeRest",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "47005392",
		"_collection_link": "https://research-administrator-57366460-4460481.postman.co/workspace/Curso-Api-Rest~a39fa2bc-2acb-4105-866b-aec4594dbfa9/collection/47005392-ce31559c-2300-477b-8a93-018ccebb2bc2?action=share&source=collection_link&creator=47005392"
	},
	"item": [
		{
			"name": "geração de massa",
			"item": [
				{
					"name": "busca nova pessoa",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Deve ter o status 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// capturar nome, email, senha\r",
									"console.log(pm.response.json().results[0].name.first);\r",
									"pm.globals.set(\"userName\", pm.response.json().results[0].name.first);\r",
									"pm.globals.set(\"userEmail\", pm.response.json().results[0].email);\r",
									"pm.globals.set(\"userPassword\", pm.response.json().results[0].login.password);"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://randomuser.me/api/",
							"protocol": "https",
							"host": [
								"randomuser",
								"me"
							],
							"path": [
								"api",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "login",
			"item": [
				{
					"name": "login",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"carlos.henrique@gmail.com\",\r\n    \"password\": \"123456\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://serverest.dev/login",
							"protocol": "https",
							"host": [
								"serverest",
								"dev"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "usuários",
			"item": [
				{
					"name": "novo cadastro",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.globals.unset(\"schema\");\r",
									"\r",
									"\r",
									"pm.globals.set(\"schema\", {\r",
									"   \"type\" : \"object\" ,\r",
									"   \"properties\" : {\r",
									"     \"message\" : {\r",
									"       \"type\" : \"string\"\r",
									"    },\r",
									"    \"_id\" : {\r",
									"       \"tipo\" : \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"obrigatório\" : [\r",
									"     \"mensagem\" ,\r",
									"     \"_id\"\r",
									"  ]\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Validar status code 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Validar a mensagem\", function () {\r",
									"    pm.expect(pm.response.json().message).to.be.eql(\"Cadastro realizado com sucesso\")\r",
									"});\r",
									"\r",
									"pm.test(\"Capturar o id\", function () {\r",
									"    pm.globals.set(\"userId\", pm.response.json()._id)\r",
									"});\r",
									"\r",
									"const Ajv = require(\"ajv\")\r",
									"const ajv = new Ajv({allErrors: true, verbose: true})\r",
									"\r",
									"pm.test(\"Schema é valido\", function () {\r",
									"  pm.expect(ajv.validate(pm.globals.get('schema'), pm.response.json()), JSON.stringify(ajv.errors)).to.be.true;\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nome\": \"{{userName}}\",\r\n    \"email\": \"{{userEmail}}\",\r\n    \"password\": \"{{userPassword}}\",\r\n    \"administrador\": \"false\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://serverest.dev/usuarios",
							"protocol": "https",
							"host": [
								"serverest",
								"dev"
							],
							"path": [
								"usuarios"
							]
						}
					},
					"response": []
				},
				{
					"name": "buscar usuários",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.globals.unset(\"schema\");\r",
									"\r",
									"\r",
									"pm.globals.set(\"schema\", {\r",
									"   \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"quantidade\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"usuarios\": {\r",
									"      \"type\": \"array\",\r",
									"      \"items\": [\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"nome\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"email\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"password\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"administrador\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"_id\": {\r",
									"              \"type\": \"string\"\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"nome\",\r",
									"            \"email\",\r",
									"            \"password\",\r",
									"            \"administrador\",\r",
									"            \"_id\"\r",
									"          ]\r",
									"        }\r",
									"      ]\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"quantidade\",\r",
									"    \"usuarios\"\r",
									"  ]\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Deve ter o status 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const Ajv = require(\"ajv\")\r",
									"const ajv = new Ajv({allErrors: true, verbose: true})\r",
									"\r",
									"pm.test(\"Deve validar o schema\", function () {\r",
									"    pm.expect(ajv.validate(pm.globals.get('schema'), pm.response.json()), JSON.stringify(ajv.errors)).to.be.true;\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/usuarios",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"usuarios"
							]
						}
					},
					"response": []
				},
				{
					"name": "buscar usuário pelo id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Deve ter o status 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Deve validar a resposta do objeto\", function () {\r",
									"    const response = pm.response.json();\r",
									"    \r",
									"    pm.expect(response.nome).to.be.eql(pm.globals.get('userName'));\r",
									"    pm.expect(response.email).to.be.eql(pm.globals.get('userEmail'));\r",
									"    pm.expect(response.password).to.be.eql(pm.globals.get('userPassword'));\r",
									"    pm.expect(response.administrador).to.be.eql('false');\r",
									"});\r",
									"\r",
									"const Ajv = require(\"ajv\")\r",
									"const ajv = new Ajv({allErrors: true, verbose: true})\r",
									"\r",
									"pm.test(\"Deve validar o schema\", function () {\r",
									"    pm.expect(ajv.validate(pm.globals.get('schema'), pm.response.json()), JSON.stringify(ajv.errors)).to.be.true;\r",
									"});\r",
									"\r",
									"pm.test(\"Deve validar o id\", function () {\r",
									"    pm.expect(pm.response.json()._id).to.be.eql(pm.globals.get('userId'));\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.globals.unset(\"schema\");\r",
									"\r",
									"\r",
									"pm.globals.set(\"schema\", {\r",
									"   \"type\" : \"object\" ,\r",
									"   \"properties\" : {\r",
									"     \"nome\" : {\r",
									"       \"type\" : \"string\"\r",
									"    },\r",
									"    \"e-mail\" : {\r",
									"       \"tipo\" : \"string\"\r",
									"    },\r",
									"    \"senha\" : {\r",
									"       \"tipo\" : \"string\"\r",
									"    },\r",
									"    \"administrador\" : {\r",
									"       \"tipo\" : \"string\"\r",
									"    },\r",
									"    \"_id\" : {\r",
									"       \"tipo\" : \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\" : [\r",
									"     \"nome\" ,\r",
									"     \"email\" ,\r",
									"     \"password\" ,\r",
									"     \"administrador\" ,\r",
									"     \"_id\"\r",
									"  ]\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/usuarios/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"usuarios",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "update de usuário",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.globals.unset(\"schema\");\r",
									"\r",
									"\r",
									"pm.globals.set(\"schema\", {\r",
									"   \"type\" : \"object\" ,\r",
									"   \"properties\" : {\r",
									"     \"message\" : {\r",
									"       \"type\" : \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"obrigatório\" : [\r",
									"     \"mensagem\"\r",
									"  ]\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Deve ter o status 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"})\r",
									"\r",
									"pm.test(\"Deve validar a mensagem de sucesso\", function () {\r",
									"    pm.expect(pm.response.json().message).to.be.eql(\"Registro alterado com sucesso\");\r",
									"});\r",
									"\r",
									"const Ajv = require(\"ajv\")\r",
									"const ajv = new Ajv({allErrors: true, verbose: true})\r",
									"\r",
									"pm.test(\"Deve validar o schema\", function () {\r",
									"    pm.expect(ajv.validate(pm.globals.get('schema'), pm.response.json()), JSON.stringify(ajv.errors)).to.be.true;\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nome\": \"{{userName}}\",\r\n    \"email\": \"{{userEmail}}\",\r\n    \"password\": \"{{userPassword}}\",\r\n    \"administrador\": \"true\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/usuarios/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"usuarios",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "buscar usuário atualizado",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.globals.unset(\"schema\");\r",
									"\r",
									"\r",
									"pm.globals.set(\"schema\", {\r",
									"   \"type\" : \"object\" ,\r",
									"   \"properties\" : {\r",
									"     \"nome\" : {\r",
									"       \"type\" : \"string\"\r",
									"    },\r",
									"    \"e-mail\" : {\r",
									"       \"tipo\" : \"string\"\r",
									"    },\r",
									"    \"senha\" : {\r",
									"       \"tipo\" : \"string\"\r",
									"    },\r",
									"    \"administrador\" : {\r",
									"       \"tipo\" : \"string\"\r",
									"    },\r",
									"    \"_id\" : {\r",
									"       \"tipo\" : \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\" : [\r",
									"     \"nome\" ,\r",
									"     \"email\" ,\r",
									"     \"password\" ,\r",
									"     \"administrador\" ,\r",
									"     \"_id\"\r",
									"  ]\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Deve ter o status 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Deve validar usuário como administrador\", function () {\r",
									"    const response = pm.response.json()\r",
									"    \r",
									"    pm.expect(response.administrador).to.be.eql('true');\r",
									"});\r",
									"\r",
									"const Ajv = require(\"ajv\")\r",
									"const ajv = new Ajv({allErrors: true, verbose: true})\r",
									"\r",
									"pm.test(\"Deve validar o schema\", function () {\r",
									"    pm.expect(ajv.validate(pm.globals.get('schema'), pm.response.json()), JSON.stringify(ajv.errors)).to.be.true;\r",
									"});\r",
									"\r",
									"pm\r",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/usuarios/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"usuarios",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "deletar usuário da base",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.globals.unset(\"schema\");\r",
									"\r",
									"\r",
									"pm.globals.set(\"schema\", {\r",
									"   \"type\" : \"object\" ,\r",
									"   \"properties\" : {\r",
									"     \"message\" : {\r",
									"       \"type\" : \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"obrigatório\" : [\r",
									"     \"mensagem\"\r",
									"  ]\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Deve ter o status 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Deve validar a mensagem de suceso\", function () {\r",
									"    pm.expect(pm.response.json().message).to.be.eql(\"Registro excluído com sucesso\")\r",
									"});\r",
									"\r",
									"const Ajv = require(\"ajv\")\r",
									"const ajv = new Ajv({allErrors: true, verbose: true})\r",
									"\r",
									"pm.test(\"Deve validar o schema\", function () {\r",
									"    pm.expect(ajv.validate(pm.globals.get('schema'), pm.response.json()), JSON.stringify(ajv.errors)).to.be.true;\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/usuarios/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"usuarios",
								"{{userId}}"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}